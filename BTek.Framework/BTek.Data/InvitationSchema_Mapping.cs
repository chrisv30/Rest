//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BTek.Data
{
    #pragma warning disable 1573
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.ModelConfiguration;
    using System.Data.Entity.Infrastructure;
    
    internal partial class InvitationSchema_Mapping : EntityTypeConfiguration<InvitationSchema>
    {
        public InvitationSchema_Mapping()
        {					
    		this.HasKey(t => t.Id);		
    		this.ToTable("InvitationSchema");
    		this.Property(t => t.Id).HasColumnName("Id");
    		this.Property(t => t.C_id).HasColumnName("_id");
    		this.Property(t => t.LastSvrUpdateDate).HasColumnName("LastSvrUpdateDate");
    		this.Property(t => t.OrgId).HasColumnName("OrgId");
    		this.Property(t => t.SenderId).HasColumnName("SenderId");
    		this.Property(t => t.RoleId).HasColumnName("RoleId");
    		this.Property(t => t.MemberId).HasColumnName("MemberId");
    		this.Property(t => t.RecipientEmail).HasColumnName("RecipientEmail").IsRequired().HasMaxLength(50);
    		this.Property(t => t.RecipientId).HasColumnName("RecipientId");
    		this.Property(t => t.Status).HasColumnName("Status").IsRequired().HasMaxLength(50);
    		this.Property(t => t.DateCreated).HasColumnName("DateCreated");
    		this.Property(t => t.DateSent).HasColumnName("DateSent");
    		this.Property(t => t.DateExpires).HasColumnName("DateExpires");
    		this.Property(t => t.Message).HasColumnName("Message");
    		this.HasOptional(t => t.MemberSchema).WithMany(t => t.InvitationSchemas).HasForeignKey(d => d.MemberId);
    		this.HasOptional(t => t.OrganisationSchema).WithMany(t => t.InvitationSchemas).HasForeignKey(d => d.OrgId);
    		this.HasOptional(t => t.UserSchema).WithMany(t => t.InvitationSchemas).HasForeignKey(d => d.RecipientId);
    		this.HasOptional(t => t.RoleSchema).WithMany(t => t.InvitationSchemas).HasForeignKey(d => d.RoleId);
    		this.HasOptional(t => t.UserSchema1).WithMany(t => t.InvitationSchemas1).HasForeignKey(d => d.SenderId);
    	}
    }
}
